{
	"name": "DF_STG_EstCapacidades_borrar",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_CSV_CAP",
						"type": "DatasetReference"
					},
					"name": "CSVEstCapacidades",
					"script": "source(output(\n\t\tEstablecimientoId as integer,\n\t\tEstablecimientoNombre as string,\n\t\tGrupoProductoId as integer,\n\t\tGrupoProductoNombre as string,\n\t\tCapacidad as integer,\n\t\tFechaInicio as string,\n\t\tFechaFin as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpurgeFiles: true,\n\trowUrlColumn: 'FicheroCarga',\n\twildcardPaths:['/blobs/CAP_*']) ~> CSVEstCapacidades"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_ASQL_CTL_Errores",
						"type": "DatasetReference"
					},
					"name": "CTLErrores",
					"script": "MensajeError sink(input(\n\t\tIdError as integer,\n\t\tMensajeError as string,\n\t\tNombreFichero as string,\n\t\tFecha as date\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tmapColumn(\n\t\tMensajeError,\n\t\tNombreFichero = FicheroCarga,\n\t\tFecha = FechaCarga\n\t)) ~> CTLErrores"
				},
				{
					"dataset": {
						"referenceName": "DS_ASQL_STG_EstCapacidades",
						"type": "DatasetReference"
					},
					"name": "STGEstCapacidades",
					"script": "Convierte sink(input(\n\t\tEstablecimiento_Id as integer,\n\t\tEstablecimiento_Nombre as string,\n\t\tGrupoProducto_Id as integer,\n\t\tGrupoProducto_Nombre as string,\n\t\tCapacidad as integer,\n\t\tFechaInicio as date,\n\t\tFechaFin as date,\n\t\tFechaCarga as timestamp,\n\t\tFicheroCarga as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tmapColumn(\n\t\tEstablecimiento_Id = EstablecimientoId,\n\t\tEstablecimiento_Nombre = EstablecimientoNombre,\n\t\tGrupoProducto_Id = GrupoProductoId,\n\t\tGrupoProducto_Nombre = GrupoProductoNombre,\n\t\tCapacidad,\n\t\tFechaInicio,\n\t\tFechaFin,\n\t\tFechaCarga,\n\t\tFicheroCarga\n\t)) ~> STGEstCapacidades"
				}
			],
			"transformations": [
				{
					"name": "MarcaDuplicados",
					"script": "FechaCarga aggregate(groupBy(EstablecimientoId),\n\tflagDuplicado = case(count(EstablecimientoId)>1,1,0)) ~> MarcaDuplicados"
				},
				{
					"name": "IfNoDuplicados",
					"script": "CuentaDuplicados split(numDuplicados == 0,\n\tdisjoint: false) ~> IfNoDuplicados@(NoHayDuplicados, HayDuplicados)"
				},
				{
					"name": "CuentaDuplicados",
					"script": "MarcaDuplicados aggregate(numDuplicados = sum(flagDuplicado)) ~> CuentaDuplicados"
				},
				{
					"name": "Join",
					"script": "IfNoDuplicados@HayDuplicados, FechaCarga join(IfNoDuplicados@HayDuplicados@numDuplicados>0,\n\tjoinType:'cross',\n\tbroadcast: 'none')~> Join"
				},
				{
					"name": "FechaCarga",
					"script": "CSVEstCapacidades derive(FechaCarga = currentTimestamp()) ~> FechaCarga"
				},
				{
					"name": "MensajeError",
					"script": "FilaError derive(MensajeError = toString('Clave Duplicada')) ~> MensajeError"
				},
				{
					"name": "FilaError",
					"script": "Join aggregate(groupBy(FicheroCarga,\n\t\tFechaCarga),\n\tnumDuplicados = max(IfNoDuplicados@HayDuplicados@numDuplicados)) ~> FilaError"
				},
				{
					"name": "Convierte",
					"script": "Join1 derive(FechaInicio = toDate(FechaInicio,'yyyyMMdd'),\n\t\tFechaFin = toDate(FechaFin,'yyyyMMdd')) ~> Convierte"
				},
				{
					"name": "Join1",
					"script": "IfNoDuplicados@NoHayDuplicados, FechaCarga join(numDuplicados==0,\n\tjoinType:'cross',\n\tbroadcast: 'none')~> Join1"
				}
			]
		}
	}
}